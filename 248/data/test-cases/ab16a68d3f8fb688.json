{
  "uid" : "ab16a68d3f8fb688",
  "name" : "test_ip_six_all",
  "fullName" : "unittests.test_haclient.TestUrlChecker#test_ip_six_all",
  "historyId" : "ce70fee0bbac88014bbe2062aebf52b0",
  "time" : {
    "start" : 1635095938459,
    "stop" : 1635095938460,
    "duration" : 1
  },
  "description" : "Test regex parsing user inputted url as ip v6 address",
  "descriptionHtml" : "<p>Test regex parsing user inputted url as ip v6 address</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: None != 'fe80::7:8%eth0'",
  "statusTrace" : "self = <unittests.test_haclient.TestUrlChecker testMethod=test_ip_six_all>\n\n    def test_ip_six_all(self):\n        \"\"\"Test regex parsing user inputted url as ip v6 address\"\"\"\n        test_case = [\"2001:0db8:0000:0000:0000:0000:1428:57ab\",\n                     \"2001:0db8:0000:0000:0000::1428:57ab\",\n                     \"2001:0db8:0:0:0:0:1428:57ab\",\n                     \"2001:0db8:0:0::1428:57ab\",\n                     \"2001:0db8::1428:57ab\",\n                     \"2001:db8::1428:57ab\",\n                     \"1:2:3:4:5:6:7:8\",\n                     \"1::\",\n                     \"1:2:3:4:5:6:7::\",\n                     \"1::8\",\n                     \"1:2:3:4:5:6::8\",\n                     \"1::7:8\",\n                     \"1:2:3:4:5::7:8\",\n                     \"1:2:3:4:5::8\",\n                     \"1::6:7:8\",\n                     \"1:2:3:4::6:7:8\",\n                     \"1:2:3:4::8\",\n                     \"1::5:6:7:8\",\n                     \"1:2:3::5:6:7:8\",\n                     \"1:2:3::8\",\n                     \"1::4:5:6:7:8\",\n                     \"1:2::4:5:6:7:8\",\n                     \"1:2::8\",\n                     \"1::3:4:5:6:7:8\",\n                     \"1::3:4:5:6:7:8\",\n                     \"1::8\",\n                     \"::2:3:4:5:6:7:8\",\n                     \"::2:3:4:5:6:7:8\",\n                     \"::8\",\n                     \"fe80::7:8%eth0\",\n                     \"fe80::7:8%1\",\n                     \"::255.255.255.255\",\n                     \"::ffff:255.255.255.255\",\n                     \"::ffff:0:255.255.255.255\",\n                     \"2001:db8:3:4::192.0.2.33\",\n                     \"64:ff9b::192.0.2.33\",]\n        for address in test_case:\n            test_addr = f\"http://{address}/test.jpg\"\n            matches = check_url(test_addr)\n    \n>           self.assertEqual(matches, address)\nE           AssertionError: None != 'fe80::7:8%eth0'\n\nunittests/test_haclient.py:267: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1635095938450,
      "stop" : 1635095938450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1635095938508,
      "stop" : 1635095938508,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "unittests"
  }, {
    "name" : "suite",
    "value" : "test_haclient"
  }, {
    "name" : "subSuite",
    "value" : "TestUrlChecker"
  }, {
    "name" : "host",
    "value" : "fv-az39-168"
  }, {
    "name" : "thread",
    "value" : "7156-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "unittests.test_haclient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ab16a68d3f8fb688.json",
  "parameterValues" : [ ]
}